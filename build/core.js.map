{"version":3,"sources":["../src/core.js"],"names":[],"mappings":";;;;;;;;;QAIgB,U,GAAA,U;QAgBA,I,GAAA,I;QAkBA,O,GAAA,O;QAgCA,I,GAAA,I;;AAtEhB;;AAEO,IAAM,wCAAgB,qBAAtB;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAA2B,OAA3B,EAAoC;AACzC,MAAM,OAAO,qBAAK,OAAL,CAAb;AACA,SAAO,MAAM,GAAN,CAAU,SAAV,EAAqB,IAArB,EACM,GADN,CACU,gBADV,EAC4B,IAD5B,CAAP;AAED;;AAED,SAAS,UAAT,CAAoB,IAApB,EAA0B;AACxB,MAAI,CAAC,IAAL,EAAW,OAAO,EAAP;;AADa,kBAEL,KAAK,GAAL,CAAS,MAAT,CAFK;;AAAA;;AAAA,MAEjB,GAFiB;AAAA,MAEZ,GAFY;;AAGxB,MAAM,WAAW,KAAK,KAAL,CAAW,CAAC,OAAD,EAAU,GAAV,CAAX,EAA2B,CAA3B,CAAjB;AACA,MAAM,WAAW,KAAK,KAAL,CAAW,CAAC,OAAD,EAAU,GAAV,CAAX,EAA2B,CAA3B,CAAjB;AACA,MAAS,WAAW,QAApB,EAA+B,OAAO,CAAC,GAAD,CAAP,CAA/B,KACK,IAAI,WAAW,QAAf,EAA0B,OAAO,CAAC,GAAD,CAAP,CAA1B,KAC0B,OAAO,CAAC,GAAD,EAAM,GAAN,CAAP;AAChC;;AAEM,SAAS,IAAT,CAAc,KAAd,EAAgE;AAAA,MAA3C,KAA2C,yDAAnC,MAAM,KAAN,CAAY,CAAC,MAAD,EAAS,OAAT,CAAZ,EAA+B,CAA/B,CAAmC;;AACrE,MAAM,UAAU,MAAM,GAAN,CAAU,SAAV,EACM,MADN,CACa,WAAW,MAAM,GAAN,CAAU,MAAV,CAAX,CADb,CAAhB;AAEA,MAAI,QAAQ,IAAR,KAAiB,CAArB,EAAwB;AACtB,WAAO,MAAM,MAAN,CAAa,MAAb,EACM,MADN,CACa,SADb,EAEM,GAFN,CAEU,QAFV,EAEoB,QAAQ,KAAR,EAFpB,CAAP;AAGD,GAJD,MAIO;AACL,WAAO,MAAM,KAAN,CAAY;AACjB,YAAM,oBAAI;AACR,eAAO,QAAQ,CADP;AAER,cAAM,QAAQ,IAAR,CAAa,CAAb;AAFE,OAAJ,CADW;AAKjB,eAAS,QAAQ,IAAR,CAAa,CAAb;AALQ,KAAZ,CAAP;AAOD;AACF;;AAEM,SAAS,OAAT,CAAiB,KAAjB,EAAwB;AAC7B,MAAM,QAAQ,MAAM,KAAN,CAAY,CAAC,MAAD,EAAS,OAAT,CAAZ,EAA+B,CAA/B,CAAd;AACA,SAAO,KACL,MAAM,GAAN,CAAU,SAAV,EAAqB,MAAM,GAAN,CAAU,gBAAV,CAArB,EACM,MADN,CACa,MADb,EAEM,MAFN,CAEa,QAFb,CADK,EAIL,KAJK,CAAP;AAMD;;AAED,SAAS,kBAAT,CAA4B,SAA5B,EAAuC,KAAvC,EAA8C;AAC5C,MAAM,eAAe,UAAU,KAAV,CAAgB,CAAC,OAAD,EAAU,KAAV,CAAhB,CAArB;AACA,MAAI,YAAJ,EAAkB;AAChB,WAAO,UAAU,QAAV,CAAmB,CAAC,OAAD,EAAU,YAAV,CAAnB,EAA4C;AAAA,aAAK,IAAI,CAAT;AAAA,KAA5C,EACU,QADV,CACmB,CAAC,OAAD,EAAU,KAAV,CADnB,CAAP;AAED,GAHD,MAGO;AACL,WAAO,SAAP;AACD;AACF;;AAED,SAAS,OAAT,CAAiB,SAAjB,EAA4B,KAA5B,EAAmC,KAAnC,EAA0C;;;;AAIxC,MAAI,UAAU,GAAV,CAAc,MAAd,EAAsB,QAAtB,CAA+B,KAA/B,CAAJ,EAA2C;AACzC,WAAO,UAAU,QAAV,CAAmB,CAAC,OAAD,EAAU,KAAV,CAAnB,EAAqC,CAArC,EAAwC;AAAA,aAAK,IAAI,CAAT;AAAA,KAAxC,EACU,KADV,CACgB,CAAC,OAAD,EAAU,KAAV,CADhB,EACkC,KADlC,CAAP;AAED,GAHD,MAGO;AACL,WAAO,SAAP;AACD;AACF;;AAEM,SAAS,IAAT,CAAc,SAAd,EAAyB,KAAzB,EAAgC,KAAhC,EAAuC;AAC5C,SAAO,QACL,mBAAmB,SAAnB,EAA8B,KAA9B,CADK,EAEL,KAFK,EAGL,KAHK,CAAP;AAKD","file":"core.js","sourcesContent":["import {List, Map} from 'immutable';\n\nexport const INITIAL_STATE = Map();\n\nexport function setEntries(state, entries) {\n  const list = List(entries);\n  return state.set('entries', list)\n              .set('initialEntries', list);\n}\n\nfunction getWinners(vote) {\n  if (!vote) return [];\n  const [one, two] = vote.get('pair');\n  const oneVotes = vote.getIn(['tally', one], 0);\n  const twoVotes = vote.getIn(['tally', two], 0);\n  if      (oneVotes > twoVotes)  return [one];\n  else if (oneVotes < twoVotes)  return [two];\n  else                           return [one, two];\n}\n\nexport function next(state, round = state.getIn(['vote', 'round'], 0)) {\n  const entries = state.get('entries')\n                       .concat(getWinners(state.get('vote')));\n  if (entries.size === 1) {\n    return state.remove('vote')\n                .remove('entries')\n                .set('winner', entries.first());\n  } else {\n    return state.merge({\n      vote: Map({\n        round: round + 1,\n        pair: entries.take(2)\n      }),\n      entries: entries.skip(2)\n    });\n  }\n}\n\nexport function restart(state) {\n  const round = state.getIn(['vote', 'round'], 0);\n  return next(\n    state.set('entries', state.get('initialEntries'))\n         .remove('vote')\n         .remove('winner'),\n    round\n  );\n}\n\nfunction removePreviousVote(voteState, voter) {\n  const previousVote = voteState.getIn(['votes', voter]);\n  if (previousVote) {\n    return voteState.updateIn(['tally', previousVote], t => t - 1)\n                    .removeIn(['votes', voter]);\n  } else {\n    return voteState;\n  }\n}\n\nfunction addVote(voteState, entry, voter) {\n  // Update to EVE, then\n\n  // Update Redux state\n  if (voteState.get('pair').includes(entry)) {\n    return voteState.updateIn(['tally', entry], 0, t => t + 1)\n                    .setIn(['votes', voter], entry);\n  } else {\n    return voteState;\n  }\n}\n\nexport function vote(voteState, entry, voter) {\n  return addVote(\n    removePreviousVote(voteState, voter),\n    entry,\n    voter\n  );\n}\n"]}